<?xml version="1.0" encoding="utf-8"?>
<GenericPopupView direction="horizontal" initialize="this._initialize()" xmlns="com.bedrock.extension.view.popups.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" xmlns:misc="com.bedrock.extension.view.misc.*">
	<mx:Script>
		<![CDATA[
			import com.bedrock.framework.plugin.util.VariableUtil;
			import com.bedrock.extension.controller.ExtensionController;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			private var _templateManagementView:TemplateManagementView;
			
			private function _initialize():void
			{
				this._templateManagementView = new TemplateManagementView;
				this._templateManagementView.initialize();
			}
			
			public function populate():void
			{
				this.addBedrockClassPathsCheck.selected = VariableUtil.sanitize( ExtensionController.instance.settingsXML.addBedrockToClassPaths );
				this.autoLoadMostRecentProjectCheck.selected = VariableUtil.sanitize( ExtensionController.instance.settingsXML.autoLoadMostRecentProject );
				this.autoSaveConfigChangesCheck.selected = VariableUtil.sanitize( ExtensionController.instance.settingsXML.autoSaveConfigChanges );
				this.includeSubFoldersInProjectBrowserCheck.selected = VariableUtil.sanitize( ExtensionController.instance.settingsXML.includeSubFoldersInProjectBrowser );
				this.autoHideMenuCheck.selected = VariableUtil.sanitize( ExtensionController.instance.settingsXML.autoHideMenu );
				
				this.frameworkVersionCombo.dataProvider = ExtensionController.instance.versions;
				this.frameworkVersionCombo.enabled = this.addBedrockClassPathsCheck.selected;
			}
			
			private function _showTemplateManager():void
			{
				this.closePopup();
				
				PopUpManager.addPopUp( this._templateManagementView, ExtensionController.instance.root, true );
				PopUpManager.centerPopUp( this._templateManagementView );
			}
			
			private function _toggleBedrockClassPath():void
			{
				if ( this.addBedrockClassPathsCheck.selected ) {
					ExtensionController.instance.createClassPath( this.frameworkVersionCombo.selectedLabel );
				} else {
					ExtensionController.instance.deleteClassPath();
				}
				ExtensionController.instance.settingsXML.addBedrockToClassPaths = this.addBedrockClassPathsCheck.selected;
				this.frameworkVersionCombo.enabled = this.addBedrockClassPathsCheck.selected;
				ExtensionController.instance.saveSettings();
			}
			private function _toggleAutoLoadMostRecentProject():void
			{
				ExtensionController.instance.settingsXML.autoLoadMostRecentProject = this.autoLoadMostRecentProjectCheck.selected;
				ExtensionController.instance.saveSettings();
			}
			private function _toggleAutoSaveConfigChanges():void
			{
				ExtensionController.instance.settingsXML.autoSaveConfigChanges = this.autoSaveConfigChangesCheck.selected;
				ExtensionController.instance.saveSettings();
			}
			private function _toggleIncludeSubFoldersInProjectBrowser():void
			{
				ExtensionController.instance.settingsXML.includeSubFoldersInProjectBrowser = this.includeSubFoldersInProjectBrowserCheck.selected;
				ExtensionController.instance.saveSettings();
			}
			private function _toggleAutoHideMenu():void
			{
				ExtensionController.instance.settingsXML.autoHideMenu = this.autoHideMenuCheck.selected;
				ExtensionController.instance.saveSettings();
			}
			private function _clearSettings():void
			{
				Alert.show( "This will clear all of your stored projects & settings!\nAre you sure you want to proceed?", "Warning!", Alert.OK | Alert.CANCEL,this, this._onCloseAlert, null, Alert.OK);
			}
			private function _onCloseAlert($event:CloseEvent):void
			{
				switch ( $event.detail ) {
					case Alert.OK :
						ExtensionController.instance.createSettings();
						this.closePopup();
						break;
				}
			}
			
			
			
		]]>
	</mx:Script>
	<mx:Panel title="Panel Settings" verticalAlign="middle" styleName="parentPanel" horizontalAlign="center">
	
		<mx:Panel title="Panel Behavior" height="100%" horizontalAlign="center">
			<mx:Form >
				<mx:FormItem>
					<mx:CheckBox label="Automatically load most recent project" id="autoLoadMostRecentProjectCheck" change="this._toggleAutoLoadMostRecentProject()"/>
					<mx:CheckBox label="Automatically save config after every change" id="autoSaveConfigChangesCheck" change="this._toggleAutoSaveConfigChanges()"/>
					<mx:CheckBox label="Include sub folders in project browser" id="includeSubFoldersInProjectBrowserCheck" change="this._toggleIncludeSubFoldersInProjectBrowser()"/>
					<mx:CheckBox label="Auto hide menu" id="autoHideMenuCheck" change="this._toggleAutoHideMenu()"/>
				</mx:FormItem>
			</mx:Form>
		</mx:Panel>
		
		<mx:Panel title="IDE Class Path" width="100%" horizontalAlign="center">
			<mx:Form>
				<mx:CheckBox id="addBedrockClassPathsCheck" label="Add bedrock to flash class paths" change="this._toggleBedrockClassPath()"/>
				<mx:HRule width="100%" />
				<mx:FormItem label="Version" width="100%">
					<mx:ComboBox id="frameworkVersionCombo" width="75" change="this._toggleBedrockClassPath()" />
				</mx:FormItem>
			</mx:Form>
		</mx:Panel>
		<mx:Button label="Manage Templates" height="35" click="this._showTemplateManager()"/>
		<mx:ControlBar >
			<mx:Button label="Clear Settings" height="35" click="this._clearSettings()"/>
			<mx:Spacer width="100%"/>
			<mx:Button label="Done" height="35" click="this.closePopup()"/>
		</mx:ControlBar>
	</mx:Panel>
	
	
</GenericPopupView>
