<?xml version="1.0" encoding="utf-8"?>
<GenericExtensionPopupView xmlns="com.bedrock.extension.view.popups.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:misc="com.bedrock.extension.view.misc.*">
	<mx:Script>
		<![CDATA[
			import com.bedrock.extension.controller.ProjectController;
			import com.greensock.TweenLite;
			import com.bedrock.framework.plugin.util.VariableUtil;
			import com.bedrock.extension.event.ExtensionEvent;
			import com.bedrock.extension.controller.ExtensionController;
			import mx.managers.PopUpManager;
			import com.bedrock.framework.plugin.util.ArrayUtil;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import mx.collections.HierarchicalData;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.managers.CursorManager;
			
		 	[Embed("assets/InfoIcon.png")]
            private var InfoIcon:Class;
            
			public function populate():void
			{
				this.frameworkVersionCombo.dataProvider = ExtensionController.getInstance().versions;
				
				this.projectNameText.text = ExtensionController.getInstance().projectXML.@name;
				this.projectPathText.text = ExtensionController.getInstance().projectXML.path;
				this.rootPackageText.text = ExtensionController.getInstance().projectXML.rootPackage;
				this.templateCombo.selectedIndex = ArrayUtil.findIndex( ExtensionController.getInstance().templates, ExtensionController.getInstance().projectXML.template );
				this.colorPicker.selectedColor = ExtensionController.getInstance().projectXML.stageColor;
				this.publishProjectCheck.selected = VariableUtil.sanitize( ExtensionController.getInstance().projectXML.publishProject );
				
				this._updateTemplate();
				
				this.templateCombo.selectedIndex = 0;
			}
			
			private function selectLocation():void
			{
				this.projectPathText.text = ExtensionController.getInstance().selectProjectFolder();
				this._updateProject();
			}
			
			private function _updateFrameworkVersion():void
			{
				ExtensionController.getInstance().projectXML.frameworkVersion = this.frameworkVersionCombo.selectedLabel;
				ExtensionController.getInstance().loadTemplates();
				this.templateCombo.selectedIndex = 0;
				this._updateTemplate();
			}
			private function _updateProject():void
			{
				ExtensionController.getInstance().projectXML.@name = this.projectNameText.text;
				ExtensionController.getInstance().projectXML.path = this.projectPathText.text;
				ExtensionController.getInstance().projectXML.rootPackage = this.rootPackageText.text;
				ExtensionController.getInstance().projectXML.template = this.templateCombo.selectedLabel;
				ExtensionController.getInstance().projectXML.frameworkVersion = this.frameworkVersionCombo.selectedLabel;
				ExtensionController.getInstance().projectXML.width = this.widthText.text;
				ExtensionController.getInstance().projectXML.height = this.heightText.text;
				ExtensionController.getInstance().projectXML.stageColor = this.colorPicker.selectedColor;
				ExtensionController.getInstance().projectXML.frameworkCopy = this.frameworkCopyGroup.selectedValue;
				ExtensionController.getInstance().projectXML.publishProject = this.publishProjectCheck.selected;
				ExtensionController.getInstance().projectXML.sourceFolder = this._sanitizeFolder( this.sourceFolderText.text );
				ExtensionController.getInstance().projectXML.deployFolder = this._sanitizeFolder( this.deployFolderText.text );
				ExtensionController.getInstance().projectXML.assetsFolder = this._sanitizeFolder( this.assetsFolderText.text );
			}
			private function _updateTemplate():void
			{
				ExtensionController.getInstance().loadTemplate( this.templateCombo.selectedLabel );
				
				this.widthText.text = ExtensionController.getInstance().templateXML.width;
				this.heightText.text = ExtensionController.getInstance().templateXML.height;
				this.assetsFolderText.text = ExtensionController.getInstance().templateXML.assetsFolder;
				this.sourceFolderText.text = ExtensionController.getInstance().templateXML.sourceFolder;
				this.deployFolderText.text = ExtensionController.getInstance().templateXML.deployFolder;
				
				this._updateProject();
			}
			private function _sanitizeFolder( $text:String ):String
			{
				if ( $text.charAt( $text.length - 1 ) != "/" ) return ( $text + "/" );
				if ( $text.indexOf( "//" ) != -1 ) return $text.split( "//" ).join( "/" );
				return $text;
			}
			
			private function _generateProject():void
			{
				if ( ExtensionController.getInstance().generateProject() ) {
					Alert.show( "Project creation complete!", "Attention!" );
					this.closePopup();
					
					if ( VariableUtil.sanitize( ExtensionController.getInstance().projectXML.publishProject ) ) {
						TweenLite.delayedCall( 0.5, ProjectController.getInstance().browser.publishProject );
					}
				} else {
					Alert.show( "Project creation fail!\nMissing parameters!", "Error!" );
				}
			}
			/*
			Event Handlers
			*/
            private function _onPopulate( $event:ExtensionEvent ):void
			{
				this.populate();
			}
		]]>
	</mx:Script>
	
	<mx:Panel layout="vertical" title="Create Project" styleName="parentPanel">
		<mx:HBox width="100%">
			<mx:Panel title="1. General" width="50%" height="100%">
				<mx:Form>
					<mx:FormItem label="Name" width="100%">
						<mx:TextInput id="projectNameText" width="100%" change="this._updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Location" >
						<mx:HBox>
							<mx:TextInput editable="false" id="projectPathText"/>
							<mx:Button id="browseButton" click="this.selectLocation()" label="Browse"/>
						</mx:HBox>
					</mx:FormItem>
					<mx:FormItem>
						<mx:CheckBox id="publishProjectCheck" change="this._updateProject()" label="Publish project after creation" />
					</mx:FormItem>
				</mx:Form>
			</mx:Panel>
			
			<mx:Panel title="2. Framework" width="50%" height="100%" id="frameworkPanel" horizontalAlign="center">
				<mx:Form>
					<mx:FormItem label="Version" width="100%">
						<mx:ComboBox id="frameworkVersionCombo" width="75" change="this._updateFrameworkVersion()" />
					</mx:FormItem>
					<mx:FormItem label="Template">
						<mx:ComboBox id="templateCombo" labelField="name" change="this._updateTemplate()" dataProvider="{ ExtensionController.getInstance().templates }"/>
					</mx:FormItem>
					<mx:FormItem label="Root Package" direction="vertical">
						<mx:TextInput id="rootPackageText" width="100%" change="this._updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Copy">
						<mx:HBox width="100%" horizontalAlign="center">
							<mx:RadioButtonGroup id="frameworkCopyGroup" itemClick="this._updateProject()" />
							<mx:RadioButton label="SWC" value="swc" groupName="frameworkCopyGroup" selected="true"/>
							<mx:RadioButton label="Source Code" value="source" groupName="frameworkCopyGroup"/>
						</mx:HBox>
					</mx:FormItem>
				</mx:Form>
			</mx:Panel>
			
			
		
		</mx:HBox>
		
		<mx:HBox width="100%">
		
			<mx:Panel title="3. Folder Structure" width="50%" id="structurePanel">
				<mx:Form>
					<mx:FormItem label="Source Folder" width="100%" >
						<mx:TextInput width="100%" text="flash" restrict="a-zA-Z0-9 /" id="sourceFolderText" change="this._updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Deploy Folder" width="100%" >
						<mx:TextInput width="100%" text="wwwroot" restrict="a-zA-Z0-9 /" id="deployFolderText" change="this._updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Assets Folder" width="100%" >
						<mx:HBox width="100%" horizontalAlign="center">
							<mx:Label text="{ this.deployFolderText.text }" fontWeight="normal"/>
							<mx:TextInput width="100%" text="assets" restrict="a-zA-Z0-9 /" id="assetsFolderText" change="this._updateProject()"/>
						</mx:HBox>
					</mx:FormItem>
				</mx:Form>
			</mx:Panel>
			
			
			<mx:Panel title="4. Flash" width="50%" height="100%" horizontalAlign="center">
				<mx:Form >
					<mx:FormItem label="Dimensions">
						<mx:HBox horizontalGap="1">
							<mx:TextInput width="40" id="widthText" change="this._updateProject()"/>
							<mx:Label text="x" textAlign="center"/>
							<mx:TextInput width="40" id="heightText" change="this._updateProject()"/>
						</mx:HBox>
					</mx:FormItem>
					<mx:FormItem label="FPS">
						<mx:TextInput text="30" id="fpsText" width="30" maxChars="2" change="this._updateProject()"/>
					</mx:FormItem>
					<mx:FormItem label="Stage Color">
						<mx:ColorPicker id="colorPicker" change="this._updateProject()"/>
					</mx:FormItem>
					
				</mx:Form>
			</mx:Panel>
			
						
		
		</mx:HBox>
		
		<mx:ControlBar>
			<mx:Button label="Cancel" id="cancelUpdateButton" click="this.closePopup()" height="30" />
			<mx:Spacer width="100%"/>
			<mx:Button label="Generate Project" id="generateProjectButton" click="this._generateProject()" height="30"/>
		</mx:ControlBar>
	</mx:Panel>
		
</GenericExtensionPopupView>
