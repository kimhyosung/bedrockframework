<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="this.bootup()" xmlns:view="com.bedrock.extension.view.*" xmlns:temp="com.bedrock.extension.project.view.temp.*" xmlns:extras="com.bedrock.extension.view.extras.*" xmlns:project="com.bedrock.extension.view.project.*">
	<mx:Script>
		<![CDATA[
			import com.bedrock.framework.plugin.util.VariableUtil;
			import com.bedrock.extension.view.popups.ExtensionSettingsView;
			import mx.managers.PopUpManager;
			import com.bedrock.extension.event.ExtensionEvent;
			import com.bedrock.extension.controller.ExtensionController;
			import com.bedrock.extension.logging.JSFLLogger;
			import mx.controls.Button;
			import com.bedrock.framework.core.logging.Logger;
			import com.bedrock.framework.core.dispatcher.BedrockDispatcher;
			import mx.events.ItemClickEvent;
			
			[Embed("assets/BedrockLogo.png")]
            private var BedrockLogo:Class;
			private var _extensionSettingsView:ExtensionSettingsView;
			
			private function bootup():void
			{
				Logger.initialize();
				Logger.traceLogger = new JSFLLogger;
				
				this._toggleButtons( false );
				
				BedrockDispatcher.addEventListener( ExtensionEvent.PROJECT_CREATED, this._onProjectCreated );
				BedrockDispatcher.addEventListener( ExtensionEvent.PROJECT_LOADED, this._onProjectLoaded );
				ExtensionController.getInstance().setup( this );
				ExtensionController.getInstance().initialize();
				
				this._extensionSettingsView = new ExtensionSettingsView;
				this._extensionSettingsView.initialize();
				
				this.projectContainer.addChild( ExtensionController.getInstance().moduleLoader );
			}
			
			private function _showSettings():void
			{
				this._extensionSettingsView.populate();
				
				PopUpManager.addPopUp( this._extensionSettingsView, this, true );
				PopUpManager.centerPopUp( this._extensionSettingsView );
			}
			
			private function _showNamingConventions():void
			{
				this.panelStack.selectedIndex = 4;
				this.projectButtonBar.selectedIndex = -1;
			}
			private function _onItemClick( $event:ItemClickEvent ):void
			{
				this.panelStack.selectedIndex = $event.index;
			}
			private function _onProjectCreated( $event:Event ):void
			{
				this._toggleButtons( false );
			}
			private function _onProjectLoaded( $event:Event ):void
			{
				this._toggleButtons( true );
				this.projectButtonBar.selectedIndex = 1;
				this.panelStack.selectedIndex = 1;
			}
			private function _toggleButtons( $enabled:Boolean ):void
			{
				Button( this.projectButtonBar.getChildAt( 1 ) ).enabled = $enabled;
				Button( this.projectButtonBar.getChildAt( 2 ) ).enabled = $enabled;
				Button( this.projectButtonBar.getChildAt( 3 ) ).enabled = $enabled;
			}
		]]>
	</mx:Script>
	<mx:HBox horizontalAlign="center" y="54" width="100%">
		<mx:ToggleButtonBar itemClick="this._onItemClick( event )" id="projectButtonBar">
			<mx:dataProvider>
	            <mx:String>Archive</mx:String>
	            <mx:String>Project</mx:String>
	            <mx:String>Class Generator</mx:String>
	            <mx:String>Sample Browser</mx:String>
	        </mx:dataProvider>  
		</mx:ToggleButtonBar>
		
	</mx:HBox>
	<mx:HBox x="0" y="0" width="100%" height="55" verticalAlign="middle" horizontalAlign="center" backgroundColor="#000000" paddingLeft="5" paddingRight="5">
		<mx:Spacer width="100%"/>
		<mx:Button skin="{ BedrockLogo }" width="197" height="47"/>
		<mx:Spacer width="100%"/>
	</mx:HBox>
	<mx:HBox x="0" y="0" width="100%" height="55" verticalAlign="middle" horizontalAlign="center" styleName="padded">
		<mx:Canvas height="100%" backgroundColor="#FFFFFF" visible="{ VariableUtil.sanitizeBoolean( ExtensionController.getInstance().projectXML.@generated ) }" backgroundAlpha="0.2" borderStyle="none" id="projectDetailContainer" click="this._onProjectLoaded( event )" buttonMode="true" mouseChildren="false">
			<mx:Label y="3" id="projectLabel"  text="Project : { ExtensionController.getInstance().projectXML.@name }" color="#FFFFFF" fontWeight="bold" paddingLeft="5" paddingRight="5" />
			<mx:Label y="18" id="versionLabel"  text="Version : { ExtensionController.getInstance().projectXML.frameworkVersion }" color="#FFFFFF" fontWeight="bold" paddingLeft="5" paddingRight="5"  />
		</mx:Canvas>
		<mx:Spacer width="100%"/>
		<mx:Canvas height="100%" backgroundColor="#FFFFFF" backgroundAlpha="0.2" borderStyle="none" id="buttonContainer">
			<mx:LinkButton label="- Naming Conventions" id="namingConventionsButton" click="this._showNamingConventions()"/>
			<mx:LinkButton y="{ this.namingConventionsButton.height }" x="70" label="- Settings" click="this._showSettings()"/>
		</mx:Canvas>
	</mx:HBox>
	
	<mx:ViewStack x="0" y="76" width="100%" height="100%" id="panelStack" styleName="padded">
		<view:ArchiveView />
		<mx:Canvas width="100%" height="100%" id="projectContainer" />
		<extras:ClassGeneratorView />
		<extras:SampleBrowserView />
		<extras:NamingConventionsView />
	</mx:ViewStack>
</mx:Canvas>
