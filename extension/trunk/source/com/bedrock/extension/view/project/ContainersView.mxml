<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" initialize="this.bootup()" styleName="padded5px" xmlns:misc="com.bedrock.extension.view.misc.*">
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import com.bedrock.extension.view.popups.ContainerCreationView;
			import com.bedrock.extension.controller.ProjectController;
			import com.bedrock.framework.plugin.util.XMLUtil2;
			import mx.events.DragEvent;
		
			[Embed("assets/MultiContainerIcon.png")]
            private var MultiContainerIcon:Class;
            [Embed("assets/SingleContainerIcon.png")]
            private var SingleContainerIcon:Class;
            
            [Embed("assets/CreateIcon.png")]
            private var CreateIcon:Class;
            [Embed("assets/DeleteIcon.png")]
            private var DeleteIcon:Class;
            [Embed("assets/UpdateIcon.png")]
            private var UpdateIcon:Class;
             [Embed("assets/DeselectIcon.png")]
            private var DeselectIcon:Class;
            [Embed("assets/RefreshIcon.png")]
            private var RefreshIcon:Class;
 
			private var _containerCreationView:ContainerCreationView;
            
			public function bootup():void
			{
				this._containerCreationView = new ContainerCreationView;
				this._containerCreationView.initialize();
			}
			
            /*
			Node
			*/
            private function createNode():void
            {
				this._containerCreationView.populate( this.nodeTree.selectedItem as XML );
            }
            private function deleteNode():void
            {
            	if ( this.nodeTree.selectedIndex != -1 ) {
	            	this._deleteContainer();
	            	ProjectController.instance.config.autoSaveConfig();
	            	this.attributeEditor.clearForm();
            	}
            }
            /*
			Container
			*/
           
            private function _deleteContainer():void
            {
            	delete ProjectController.instance.config.containers..container.( @id == this.nodeTree.selectedItem.@id )[ 0 ];
            	ProjectController.instance.config.refreshContainerHierarchy();
            }
            /*
            Interface Functions
            */
			private function _deselect():void
			{
				this.nodeTree.selectedItem = null;
				this.attributeEditor.clearForm();
            }
			/*
			Event Handlers
			*/
            private function onTreeSelect( $event:Event ):void
			{
				this.attributeEditor.populateForm( this.nodeTree.selectedItem as XML );
            }
            private function onDragStop( $event:DragEvent ):void
			{
                ProjectController.instance.config.reorderContainers( ProjectController.instance.config.containerHierarchy.source.toString() );
            }
		]]>
	</mx:Script>
	
	
	<mx:Panel  title="Hierarchy" width="100%" height="100%">
		<mx:AdvancedDataGrid id="nodeTree" designViewDataType="tree" dragComplete="this.onDragStop( event )" dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"  displayItemsExpanded="true" sortExpertMode="true" width="100%" height="100%" dataProvider="{ ProjectController.instance.config.containerHierarchy }" defaultLeafIcon="{ SingleContainerIcon }" folderOpenIcon="{ MultiContainerIcon }" folderClosedIcon="{ MultiContainerIcon }" itemClick="this.onTreeSelect( event )">
			<mx:headerRenderer>
				<mx:Component>
					<mx:AdvancedDataGridHeaderRenderer horizontalAlign="left"/>
				</mx:Component>
	        </mx:headerRenderer>
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="ID" dataField="@id" sortable="false" />
				<mx:AdvancedDataGridColumn headerText="X" dataField="@x" sortable="false" />
				<mx:AdvancedDataGridColumn headerText="Y" dataField="@y" sortable="false" />
			</mx:columns>
		</mx:AdvancedDataGrid>
		<misc:HierarchyControlBar id="hierarchyControlBar" creationOptions="{ ProjectController.instance.resources.getBundle( 'containerCreationOptions' ) }" createNode="this.createNode()" deleteNode="this.deleteNode()" deselectNode="this._deselect()" />
	</mx:Panel>
	
	<misc:AttributeEditor id="attributeEditor" title="Editing : { this.nodeTree.selectedItem.@id }" />
	
</mx:HDividedBox>
