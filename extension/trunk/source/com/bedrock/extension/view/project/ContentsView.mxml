<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="this.bootup()" styleName="padded5px" xmlns:misc="com.bedrock.extension.view.misc.*">
	<mx:Script>
		<![CDATA[
			import com.bedrock.extension.view.popups.ContentGroupCreationView;
			import com.bedrock.extension.view.popups.ContentCreationView;
			import mx.managers.PopUpManager;
			import com.bedrock.extension.view.popups.ContentDeletionView;
			import com.bedrock.extension.event.ExtensionEvent;
			import com.bedrock.framework.core.dispatcher.BedrockDispatcher;
			import com.bedrock.extension.controller.ProjectController;
			import com.bedrock.framework.engine.data.BedrockData;
			import mx.events.DragEvent;
		
			[Embed("assets/ContentIcon.png")]
            private var ContentIcon:Class;
			[Embed("assets/ContentGroupIcon.png")]
            private var ContentGroupIcon:Class;
            
            private var _contentDeletionView:ContentDeletionView;
            private var _contentCreationView:ContentCreationView;
            private var _contentGroupCreationView:ContentGroupCreationView;
            
			public function bootup():void
			{
				this._contentDeletionView = new ContentDeletionView;
				this._contentDeletionView.initialize();
				this._contentCreationView = new ContentCreationView;
				this._contentCreationView.initialize();
				this._contentGroupCreationView = new ContentGroupCreationView;
				this._contentGroupCreationView.initialize();
			}
            /*
			Nodes
			*/
            private function createNode():void
            {
            	switch( this.hierarchyControlBar.creationCombo.selectedItem.value ) {
            		case "content" :
						this._contentCreationView.populate();
            			break;
            		case "contentGroup" :
						this._contentGroupCreationView.populate();
            			break;
            	}
            	this._resetInterface();
            }
            private function deleteNode():void
            {
            	if ( this.nodeTree.selectedIndex != -1 ) {
            		switch( String( this.nodeTree.selectedItem.name() ) ) {
            			case "content" :
							this._contentDeletionView.populate( this.nodeTree.selectedItem.@id );
            				break;
            			case "contentGroup" :
							this.deleteContentGroup();
            				break;
            		}
	            	this._resetInterface();
            	}
            }
            
            /*
            Content Groups
            */
            private function deleteContentGroup():void
            {
            	delete ProjectController.getInstance().config.contents..contentGroup.( @id == this.nodeTree.selectedItem.@id )[ 0 ];
            }
            /*
            Insterface Functions
            */
            private function _resetInterface():void
            {
            	ProjectController.getInstance().config.autoSaveConfig();
            	this._deselect();
            }
            private function _deselect():void
			{
				this.nodeTree.selectedItem = null;
				this.attributeEditor.clearForm();
            }
			/*
			Event Handlers
			*/
            private function _onTreeSelect( $event:Event ):void
			{
				this.attributeEditor.populateForm( this.nodeTree.selectedItem as XML );
            }
            
            private function _onDragStop( $event:DragEvent ):void
			{
                ProjectController.getInstance().config.reorderContent( ProjectController.getInstance().config.contentHierarchy.source.toString() );
            }
            
		]]>
	</mx:Script>
		
	
	
	
	
	
	<mx:Panel  title="Hierarchy" width="100%" height="100%">
		<mx:AdvancedDataGrid id="nodeTree" designViewDataType="tree" displayItemsExpanded="true" sortExpertMode="true" width="100%" height="100%" dataProvider="{ ProjectController.getInstance().config.contentHierarchy }" defaultLeafIcon="{ ContentIcon }" folderOpenIcon="{ ContentGroupIcon }" folderClosedIcon="{ ContentGroupIcon }" itemClick="this._onTreeSelect( event )">
			<mx:headerRenderer>
				<mx:Component>
					<mx:AdvancedDataGridHeaderRenderer horizontalAlign="left"/>
				</mx:Component>
	        </mx:headerRenderer>
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="ID" dataField="@id" sortable="false" width="125" />
				<mx:AdvancedDataGridColumn headerText="Container" dataField="@container" sortable="false" width="100"/>
				<mx:AdvancedDataGridColumn headerText="Asset Group" dataField="@assetGroup" sortable="false" width="100"/>
				<mx:AdvancedDataGridColumn headerText="Initial Load" resizable="false" sortable="false" dataField="@initialLoad" itemRenderer="com.bedrock.extension.view.cells.ContentInitialLoadCell" />
				<mx:AdvancedDataGridColumn headerText="Initial Transition" resizable="false" sortable="false" dataField="@initialTransition" itemRenderer="com.bedrock.extension.view.cells.ContentInitialTransitionCell" />
				<mx:AdvancedDataGridColumn headerText="Indexed" resizable="false" sortable="false" dataField="@indexed" itemRenderer="com.bedrock.extension.view.cells.IndexedCell" />
				<mx:AdvancedDataGridColumn headerText="Auto Dispose" resizable="false" sortable="false" dataField="@autoDispose" itemRenderer="com.bedrock.extension.view.cells.ContentAutoDisposeCell" />
				<mx:AdvancedDataGridColumn headerText="Auto Dispose Assets" resizable="false" sortable="false" dataField="@autoDisposeAssets" itemRenderer="com.bedrock.extension.view.cells.ContentAutoDisposeAssetsCell" />
			</mx:columns>
		</mx:AdvancedDataGrid>
		<misc:HierarchyControlBar creationOptions="{ ProjectController.getInstance().resources.getBundle( 'contentCreationOptions' ) }" id="hierarchyControlBar" createNode="this.createNode()" deleteNode="this.deleteNode()" deselectNode="this._deselect()" />
	</mx:Panel>
	
	<misc:AttributeEditor id="attributeEditor" />
	
</mx:HDividedBox>
