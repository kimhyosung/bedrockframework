<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" layout="vertical" initialize="this.bootup()" title="Project Archive">
	<mx:Script>
		<![CDATA[
			import com.greensock.TweenLite;
			import com.bedrock.framework.Bedrock;
			import com.bedrock.extension.view.popups.ProjectCreationView;
			import mx.managers.PopUpManager;
			import com.bedrock.extension.controller.ExtensionController;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			
			private var _projectCreationView:ProjectCreationView;
			
			private function bootup():void
			{
				this._projectCreationView = new ProjectCreationView;
				this._projectCreationView.initialize();
			}
			
			private function findProject():void
			{
				if ( !ExtensionController.instance().findProject() ) {
					Alert.show( "Invalid project file!", "Warning!" );
				}
			}
			public function _showCreateProject():void
			{
				this.projectGrid.selectedIndex = -1;
				ExtensionController.instance().createProject();
				
				PopUpManager.addPopUp( this._projectCreationView, ExtensionController.instance().root, true );
				PopUpManager.centerPopUp( this._projectCreationView );
				
				this._projectCreationView.populate();
			}
			private function _loadProject():void
			{
				if ( !ExtensionController.instance().loadProject( this.projectGrid.selectedItem.path ) ) {
					Alert.show( "Boo! Project \"" + this.projectGrid.selectedItem.name + "\" failed!", "Warning!" );
				}
			}
			private function _removeProject():void
			{
				Alert.show("This will only erase the project from the archive, not from your hard drive.\nAre you sure you want to proceed?","Warning!", Alert.OK|Alert.CANCEL,this, this.onCloseAlert, null, Alert.OK);
			}
			private function onCloseAlert($event:CloseEvent):void
			{
				switch ( $event.detail ) {
					case Alert.OK :
						ExtensionController.instance().removeProject( this.projectGrid.selectedItem.id );
						break;
				}
			}
			

		]]>
	</mx:Script>
		
	<mx:DataGrid width="100%" height="100%" sortableColumns="true" id="projectGrid" doubleClickEnabled="true" dataProvider="{ ExtensionController.instance().projects }" itemClick="{ this.loadProjectButton.enabled = true }" itemDoubleClick="this._loadProject()">
		<mx:columns>
			<mx:DataGridColumn headerText="Name" dataField="name" width="150"/>
			<mx:DataGridColumn headerText="Path" dataField="path"/>
			<mx:DataGridColumn headerText="Version" dataField="frameworkVersion" width="75"/>
			<mx:DataGridColumn headerText="Created" dataField="created" width="100"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox width="100%">
		<mx:Button label="Create Project" width="100%" height="40" click="this._showCreateProject()" />
		<mx:Button label="Load Project" width="100%" height="40" id="loadProjectButton" click="this._loadProject()" enabled="{ this.projectGrid.selectedIndex != -1 }"/>
		<mx:Button label="Find Project" width="100%" height="40" click="this.findProject()"/>
		<mx:Button label="Remove Project" width="100%" height="40" click="this._removeProject()" enabled="{ this.projectGrid.selectedIndex != -1 }"/>
	</mx:HBox>
	
</mx:Panel>
