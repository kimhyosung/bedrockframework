package com.__template.view{	import com.__template.util.TextFieldUtil;	import com.bedrockframework.core.dispatcher.BedrockDispatcher;	import com.bedrockframework.engine.BedrockEngine;	import com.bedrockframework.engine.event.BedrockEvent;	import com.bedrockframework.engine.view.BedrockView;	import com.bedrockframework.plugin.util.ButtonUtil;	import com.bedrockframework.plugin.view.IView;		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;		import gs.TweenLite;	import gs.easing.Quad;		public class HomepageView extends BedrockView implements IView	{		/*		Variable Declarations		*/		public var changeButton:MovieClip;		public var label:MovieClip;		//Textfields		private var _txtLabel:TextField;		/*		Constructor		*/		public function HomepageView()		{			this.alpha=0;		}		public function initialize($properties:Object=null):void		{			ButtonUtil.addListeners(this.changeButton,{down:this.onChangeClicked});						this.createTextfields();			this.populateTextfields();			this.initializeComplete();		}		public function intro($properties:Object=null):void		{			TweenLite.to(this, 1, {alpha:1, ease:Quad.easeOut, onComplete:this.introComplete});			//this.introComplete();		}		public function outro($properties:Object=null):void		{			TweenLite.to(this, 1, {alpha:0, ease:Quad.easeOut, onComplete:this.outroComplete});			//this.outroComplete();		}		public function clear():void		{			this.status("clear");		}		/* 		Creates new textfields		*/		private function createTextfields():void		{			var txtOldLabel:TextField = this.label.txtText;			this._txtLabel = TextFieldUtil.getNewTextField(txtOldLabel.x, txtOldLabel.y, txtOldLabel.width, TextFieldAutoSize.CENTER);			this.label.removeChild(txtOldLabel);			this.label.addChild(this._txtLabel);		}		/* 		Populates the new textfields		*/		private function populateTextfields():void		{			this._txtLabel.htmlText = BedrockEngine.copyManager.getCopy("copy_header");		}		/*		Event Handlers		*/		private function onChangeClicked($event:MouseEvent):void		{			BedrockDispatcher.dispatchEvent(new BedrockEvent(BedrockEvent.DO_CHANGE,this,{alias:"sub_page"}));		}	}}