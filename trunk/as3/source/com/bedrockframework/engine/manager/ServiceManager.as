package com.bedrockframework.engine.manager{	import com.bedrockframework.core.base.StandardWidget;	import com.bedrockframework.engine.api.IServiceManager;	import com.bedrockframework.plugin.remoting.Service;	import com.bedrockframework.plugin.storage.HashMap;		public class ServiceManager extends StandardWidget implements IServiceManager	{		/*		Variable Declarations		*/		private var _objServices:HashMap;		/*		Constructor		*/				public function ServiceManager()		{		}		public function initialize($services:Array):void		{			this._objServices = new HashMap();			this.createServices($services);		}		/*		Create a new remoting service.		*/		public function addService($alias:String, $service:Service):void		{			this._objServices.saveValue($alias, $service);		}		/*		Create a new remoting service.		*/		private  function createService($params:Object):void		{			var objParams:Object = $params;			try {				var objService:Service = new Service(objParams.gateway, objParams.path);				this.addService(objParams.alias, objService);			}catch($error:Error){				this.error("Missing parameters, unable to create service!");			}					}		/*		Create a several new remoting services.		*/		private function createServices($services:Array):void		{			var arrServices:Array = $services;			var numLength:Number = arrServices.length;			for (var i:Number = 0; i < numLength; i++) {				this.createService(arrServices[i]);			}		}		/*		Get a new remoting service.		*/		public function getService($alias:String):Service		{						return this._objServices.getValue($alias);		}	}}